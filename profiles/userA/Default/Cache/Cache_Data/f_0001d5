<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">


<html>
  <head>
  
  
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>

    
    <title>SSO4 更新 登出</title>
        <!--link rel="stylesheet" type="text/css" href="css/bootstrap.min.css"></link-->
        <script type="text/javascript" src="js/jquery-3.7.0.min.js"></script>
        <script type="text/javascript" src="js/jquery.cookie.js"></script>
        <script type="text/javascript" src="js/ipshow.js"></script>
        <!-- include the script -->
        <script src="js/alertify.min.js"></script>
        <!-- include the style -->
        <link rel="stylesheet" href="css/alertify.min.css" />
        <!-- include a theme -->
        <link rel="stylesheet" href="css/default.min.css" />
        <style type="text/css">
        .btn {
            width: auto;
            height: auto;
            font-size: 12px;
            padding: 2px;
            text-align: center;
            vertical-align: middle;
            display: inline-block;
            margin: 0;
            line-height: 18px;
        }
    </style>
    <script type="text/javascript">
        var ieVersion = msieversion();
        //$.browser={ msie: ( navigator.appName == 'Microsoft Internet Explorer') ? true : false }

        $.browser={ msie:    /msie/.test(navigator.userAgent.toLowerCase()),
                    chrome:  /chrom(e|ium)/.test(navigator.userAgent.toLowerCase()),
                    firefox: /firefox/.test(navigator.userAgent.toLowerCase())}

        var flag = 0;
        var waitforRefresh;

        $(function() {

//      if ($.cookie("stepup") && $.browser.chrome) {
//          alertify.
//              alert("請關閉前一次的小黃視窗", "您用 Google Chrome 瀏覽器且層級切換, 請手動關閉前一次的小黃視窗!", function() {
//                  alertify.message('OK');
//              });
//      }

            // -------------- disable any mouse and keyboard action ----------------
            document.oncontextmenu = function() { return false; } //disable right mouse click
            document.onselectstart = function() { return false; } //disable select words
            //disable all keypress event
            $(document).keypress(function (e) {
                e = e || window.event;
                e.keyCode = 0;
                e.cancelBubble = true;
                return false;
            });

            // $.get( "https://am.cht.com.tw/NIAS/GetAuthnType.jsp", function(data) {
            //     var authnType = $.trim(data);
            //     console.log('authnType', authnType)
            // });

            // -------------- disable any mouse and keyboard action ----------------

            window.confirm = function(str) {
                str = str.replace(/\'/g, "'& chr(39) &'").replace(/\r\n/g, "' VBCrLf &'");
                execScript("n = msgbox('"+ str +"', 257, '避免影響SSO運作，請勿直接關閉SSO更新登出視窗')", "vbscript");
                return(n == 1);
            }
            var oamCookie = getOAMCookieName();

            //beforeunload action is called on Page Refresh & Close
            $(window).on('beforeunload', function(e) {
                // flag=0 表示非使用者自己點及登出
                if(flag == 0) {
                    // 有 stepup Cookie 表示已有登入,且 step up
                    if ($.cookie("stepup")) {
                        $.cookie("stepup", "", {expires: -1, path: "/", domain: "cht.com.tw"});
                        return;
                    }

                    if(ieVersion == 9 || ieVersion == 10)
                        return "※ 請按【停留在這個網頁】選項，以免影響SSO運作！ ※";

                    return "※ 請按【取消】鍵，以免影響SSO運作！ ※";//20120116
                }
            });

            if(sessionCounter==0 && gotSession==0) {
                try {
                    clearTimeout(timerID);
                    timerID = setTimeout("AskIfSessionOK()", 20000); //20sec
                }
                catch(err) {
                }
            }
            else {
                var obj = document.form;
                obj.showmsg.value = "bug .....";
                countDownSSOID = setInterval("countDown();", 1000);
            }

            // 標註小黃開啟時間
            nias3oCookie();
        });

        function get(obj) {
            var askTime = encodeURI( obj.elements["askTime"].value );
            var activeRefresh = encodeURI( obj.elements["activeRefresh"].value);
            var poststr =
                "askTime=" + askTime +
                "&countDown_sm=" + countDown_sm +
                "&activeRefresh=" + activeRefresh +
                "&cookiename="+getOAMCookieName();
            makePOSTRequest('https://am.cht.com.tw/asdk/GetTimeLeft.jsp', poststr);
            console.log('get >> askTime: ', askTime, ', activeRefresh: ', activeRefresh)
            if (activeRefresh == "act") {
                // 標註小黃更新時間
                nias3oCookie();
            }
        }

        function getNias3OCookieValue () {
            return new Date().getTime()
        }

        try {
            var wST = new ActiveXObject("SSOSingleToken4.SingleToken");
            wST.SaveToken(document, "NIAS3");
        }
        catch(err) {
        }

        function getOAMCookieName() {
            var defaultPort = {"http:":80, "https:":443};
            var cookieName = 'OAMAuthnCookie';
            cookieName += '_' + location.hostname;
            cookieName += '_' + ((location.port == '') ? defaultPort[location.protocol] : location.port);
            return cookieName;
        }

        function closeSSO() {
            var str = "確定登出SSO？";
            //before IE11 use
            if ($.browser.msie) {
                if (confirm(str)) {
                    //alertify.success('confirm');
                    flag = 1;
                    logoutSSO();
                }
            }
            // IE11, Edge, Chrome, Firefox Use.
            else {
                alertify.confirm(str,
                        // on OK
                        logoutSSO,
                        // on Cancel
                        function() {
                            // alertify.error('Cancel');
                            flag = 0;
                        })
                    .setHeader('避免影響SSO運作，請勿直接關閉SSO更新登出視窗')
                    .set('labels', {
                        ok: '確定',
                        cancel: '取消'
                    });
            }
        }

        function miniwin() {
            if (countDown_sm > 0) {
            printTime('----- miniwin -----');
                try {
                    KSSOIE1.SetWinTop(false, document.title);
                    KSSOIE1.SetWindowMinized(document.title);
                }
                catch(err) {
                }
            }
        }

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------

    var idleMax = 2400;
    var idleTime = 0;
    var countDown_sm=2400;
    var count0 = 0;
    var countx = 0;
    var count_act = 0;
    var count_actmax = 32;
    var count_get = 180;
    var count_getmax = 200;
    var count_2ms = 0;
    var count_2msmax = 10;
    var startget = new Date().getTime()-181000;
    var cando = true;
    var http_request = false;
    //20130501 added for popping IPShow window on-top (used to notice users) when SSO error appears
    var popCount = 3;
    var timerCountDown;

    function makePOSTRequest(url, parameters) {
        var diff = new Date().getTime() - startget;
        var obj = document.form;
        var domake = false;

        countx = countx+1;
        if(countDown_sm < 1) {
            count0 = count0+1;
            if(count0 < 4) {
                domake=true;
            } else {
                countDown_sm=-1;cando=false;
            }
        }

        if(diff >=1000 && countDown_sm >=1) {
            if(parameters.search("=act") > 10) {
                if((diff >=120000  && countDown_sm >= 300) || (diff >=1000 && countDown_sm >1 && countDown_sm < 300) ) {
                    if(countDown_sm > 1 && countDown_sm < 300) {
                        count_2ms=count_2ms+1;
                    }
                    else {
                        if(countDown_sm > 300) {
                            count_act=count_act+1;
                        }
                    }
                    if(count_2ms < count_2msmax && count_act < count_actmax) {
                        domake=true;
                    }
                }
            }
            else {
                if(countDown_sm > 1 && countDown_sm <300) {
                    count_2ms = count_2ms+1;
                    if(count_2ms < count_2msmax) {
                        domake = true;
                    }
                }
                if(diff >= 180000 && countDown_sm >= 300) {
                    domake = true;
                }
            }
        }

        if(domake) {
            if(countDown_sm >1800)
                count_2ms=0;

            count_get = count_get-1;
            if((count_get >1) && (count_get < count_getmax)) {
                startget = new Date().getTime();

                http_request = false;
                if(window.XMLHttpRequest) { // Mozilla, Safari,...
                    http_request = new XMLHttpRequest();
                    if(http_request.overrideMimeType) {
                        http_request.overrideMimeType('text/html');
                    }
                }
                else if (window.ActiveXObject) { // IE
                    try {
                        http_request = new ActiveXObject("Msxml2.XMLHTTP");
                    }
                    catch (e) {
                        try {
                            http_request = new ActiveXObject("Microsoft.XMLHTTP");
                        }
                        catch (err) {
                        }
                    }
                }

                if(!http_request) {
                    alert('Cannot create XMLHTTP instance');
                    return false;
                }

                http_request.onreadystatechange = alertContents;
                try {
                    if(parameters.search("=act") > 10) {
                        $.get("/NIAS/sso.html", function(data) {
                        });
                    }
                    http_request.open('POST', url, true);
                } catch(err) {
                }

                http_request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
                http_request.send(parameters);
            }
            else {
                cando = false;
                countDown_sm = -1;
            }
        }

        obj.showdiffcount.value = "diff"+diff;
        obj.showsm.value ="countDown"+countDown_sm;
        obj.showcando.value =cando;
        obj.showgetcount.value ="count_get"+count_get;
        obj.showact.value = count_act;
        obj.showmsg.value =parameters.substr(22);
        obj.showdomake.value =domake;
        obj.showcountx.value =countx;

    }

    var countDownSSOID; //for set/remove interval and timeout
    var timerID;        //for set/remove interval and timeout
    var moveFlag = 3;
    var gotFocus = 1;   //20090113改
    var sZone = 1800;   //Check Time per 5 min before last 30 min;
    var aZone = 20;     //Check Time at last 20 Seconds
    var cacheTime=180;
    var startTime="";
    var expired_force_logout = false;

    function alertContents() {
        try {
            if(http_request.readyState == 4) {
                if(http_request.status == 200) {
                    var result = http_request.responseText;
                    var items = result.split(",");
                    idleMax=items[1];
                    askTime=items[2];
                    idleTime=items[3];
                    activeRefresh=items[4];
                    //startTime=items[5];
                    //$('#loginTime').text(startTime);
                    gotSession=0;
                    if(askTime == "-1") {
                        if(idleTime == "120000") {  //Get no user session
                            try {
                                //if(ieVersion != 9)
                                if ($.browser.msie) {
                                  KSSOIE1.KillSSOIE();
                                }
                            } catch(err){
                            }

                            clearTimeout(timerID);
                            clearInterval(countDownSSOID);
                            countDown_sm = -1;

                            document.title="SSO作業";
                            $('#SSOMessage').text('SSO作業發生問題，按下');
                            $('#SSOLogout').text('');
                            $('#SSOLogout2').text('以確保正常登出SSO後，再重新登入。');
                            flag=1;

                            whenErrorReplaceButtons();

                            //20130501 added for popping IPShow window on-top (used to notice users) when SSO error appears
                            try {
                                printTime('----- SSO作業發生問題(SSO作業) document.title='+document.title + '-----');
                                KSSOIE1.SetWinTop(true, document.title);
                            } catch(err) {
                            }
                            timerCountDown = setInterval("pop_win();", 1000);
                            //end of 20130501 added for popping IPShow window on-top (used to notice users) when SSO error appears
                        } else {
                            gotSession = 1;
                        }
                    } else {
                        gotSession = 1;     //正常取得 user session
                    }
                        
                    if(window.console) {
                        console.log('alertContents > {countDown_sm='+countDown_sm);
                    }
                    if(gotSession==1) {
                        countDown_sm = idleMax - idleTime;
                        if(window.console) {
                            console.log('alertContents > {gotSession='+gotSession+',idleMax='+idleMax+',idleTime='+idleTime+',countDown_sm='+countDown_sm+',askTime='+askTime+'}');
                        }
                        if(countDown_sm>0 && (countDown_sm - askTime < 60) && (countDown_sm > askTime)) {
                            countDown_sm = askTime;
                        }
                        if(countDown_sm <= 0) {
                            
                            if (!$.browser.msie) {
                                var nias3o = $.cookie("NIAS3_O");
                                var diff = getCurrentTimeDiff(nias3o);
                                countDown_sm = idleMax - diff;
                                if (countDown_sm > 0) {
                                    return;
                                }
                            }

                            //try {
                                //if(ieVersion != 9)
                            //    KSSOIE1.KillSSOIE();
                            //} catch(err) {
                            //}

                            //document.title="SSO時效";

                            $('#SSOMessage').text('SSO已逾時，按下');
                            $('#SSOLogout').text('');
                            $('#SSOLogout2').text('將關閉本視窗，確保SSO正常登出。');

                            whenErrorReplaceButtons();
                            
                            try {
                                printTime('----- SSO已逾時(SSO時效) document.title='+document.title + '-----');
                                KSSOIE1.SetWinTop(true, document.title);
                            } catch(err) {
                            }
                            // $.get("/oam/server/logout", function(data) { });
                        }

                        if(countDown_sm > cacheTime) {
                            moveFlag = 0;
                            gotFocus = 1;
                            topIndex = 0;
                        }
                        //else {
                        //    try {
                        //    printTime('----- countDown_sm <= cacheTime(SSO3 更新 登出{441}) document.title='+document.title + '-----');
                        //        KSSOIE1.SetWinTop(true, document.title);
                        //    } catch(err) {
                        //    }
                        //}

                        if(countDown_sm>0) {
                            if(activeRefresh=="act") {
                                try {
                                    moveFlag = 1;
                                }
                                catch(err) {
                                }
                            }
                        }
                    }

                    clearTimeout(timerID);
                    clearInterval(countDownSSOID);
                    clearTimeout(countDownSSOID);
                    if(askTime != "-1")
                        countDownSSOID = setInterval("countDown();",1000);
                }   //http_request.status == 200
                else {  //http_request.status maybe 502
                    try {
                        //if(ieVersion != 9)
                        KSSOIE1.KillSSOIE();
                    } catch(err){
                    }

                    clearTimeout(timerID);
                    clearInterval(countDownSSOID);
                    countDown_sm = -1;

                    if(moveFlag == 1) {
                        moveFlag = 3;
                    }

                    document.title="SSO作業";
                    $('#SSOMessage').text('無法連線到SSO Server，請按');
                    $('#SSOLogout').text('');
                    $('#SSOLogout2').text('以確保正常登出SSO後，再重新登入。');
                    flag=1;

                    whenErrorReplaceButtons();

                    //20130501 added for popping IPShow window on-top (used to notice users) when SSO error appears
                    try {
                        printTime('----- 無法連線到SSO Server(SSO作業{489}) document.title='+document.title + '-----');
                        KSSOIE1.SetWinTop(true, document.title);
                    } catch(err) {
                    }
                    timerCountDown = setInterval("pop_win();", 1000);
                    //end of 20130501 added for popping IPShow window on-top (used to notice users) when SSO error appears
                }
            }//HTTP 4
        } catch(err) {
        }
    }

    function whenErrorReplaceButtons() {
        $('#refreshButn').hide();
        var confirmEle=document.createElement('input');
        confirmEle.type='button';
        confirmEle.value='確定';
        confirmEle.id='confirmButn';
        confirmEle.name='confirmButn'
        confirmEle.title='關閉本視窗';
        confirmEle.className="btn";
        confirmEle.onclick=closeMyself;
        $('#confirmButn').replaceWith(confirmEle);
        closeMyself();
    }

    function closeMyself() {
        flag = 1;
        window.opener=null;
        window.open('','_parent','');
        window.close();
    }

    function pop_win() {
        try {
            printTime('----- pop_win()(SSO作業) document.title='+document.title + '-----');
            KSSOIE1.SetWinTop(true, document.title);
        } catch(err) {
        }

        if(popCount > 0)
            popCount--;
        else {
            clearInterval(timerCountDown);
        }
    }
    
    function printTime(message) {
        if (window.console) {
            console.log(message+' > {countDown_sm='+countDown_sm+', time='+Math.floor(countDown_sm/60)+'分' + Math.floor((countDown_sm%60)) + '秒, cacheTime='+cacheTime+', document.title'+document.title+'}');
        }
    }

    var gotSession=0;
    var sessionCounter=0;
	
	function getCurrentTimeDiff(myTime) {
		var now = new Date().getTime();
		var diffInSec = Math.round(Math.abs((now - myTime) / 1000));
		return diffInSec;
	}
	
	function logoutSSO() {
		flag = 1;
		$.cookie("stepup", "", {expires: -1, path: "/", domain: "cht.com.tw"});
		$.cookie("NIAS3", "", {expires: -1, path: "/", domain: "cht.com.tw"});
        $.removeCookie("NIAS3_O", {expires: -1, path: "/", domain: "cht.com.tw"});
		location.href = 'https://am.cht.com.tw/oam/server/logout?end_url=https://am.cht.com.tw/asdk/SSOLogout.jsp';
	}
	
	var lastSyncTime;

    // 寫入登入時間
    function nias3oCookie() {
        var value = new Date().getTime();
        $.cookie("NIAS3_O", value, {expires: 2400, path: "/", domain: "cht.com.tw"});
    }
	
	function resetSleepTime() {
		var lDiff = getCurrentTimeDiff(lastSyncTime);
        var nias3o = $.cookie("NIAS3_O");
        
		if (lDiff > 10) {
            // 差過 10s 表示可能有休眠
            
            console.log('resetSleepTime - nias3o: ', nias3o, idleMax);
            // 若有 login data
            if (nias3o) {
                var diff = getCurrentTimeDiff(nias3o);
                console.log('resetSleepTime - nias3o.diff: ', diff, idleMax);
                // 差異超過允許登入 idle 時間
                if (diff > idleMax) {
                    console.log('resetSleepTime - nias3o over idleMax then logout: ', diff);

                    if (expired_force_logout) {
                        $.get("/oam/server/logout");
                    }

                    $.removeCookie("NIAS3_O", {expires: -1, path: "/", domain: "cht.com.tw"});
                    closeMyself(); 

                    countDown_sm = -1;
                    return;
                }
                // 重新同步倒數時間
                countDown_sm = idleMax - diff;
                console.log('resetSleepTime - sync.countDown_sm: ', countDown_sm);
            }
		}
		lastSyncTime = new Date().getTime();
        console.log('resetSleepTime - run.countDown_sm: ', countDown_sm, ', last sync time: ', lastSyncTime, ', last Diff: ', lDiff, ', NIAS3_O: ', nias3o);
        // Sync count down time from cookie timestamp
        if (countDown_sm > cacheTime && countDown_sm%300 === 0) {
            console.log('resetSleepTime - 同步 Sync Count Down before: ', countDown_sm, ', 差異：', diff, 'nias3_o', nias3o);
            var cDiff = getCurrentTimeDiff(nias3o);
            countDown_sm = idleMax - cDiff;
            console.log('resetSleepTime - 同步 Sync Count Down after: ', countDown_sm, ', 差異：', cDiff);
        }
	}

    function countDown() {
        if (!$.browser.msie) {
            resetSleepTime();
        }
        try {
            if(countDown_sm>0) {

                countDown_sm -= 1;
                
                // printTime('countDown');
                
                // 剩餘時間大於 sZone，每 sZone 秒跟 SSO 同步 Idle 或 剩餘時間小於 sZone 秒，則 剩餘時間=aZone 秒時同步 Idle
                if(((countDown_sm >= sZone) && (countDown_sm % sZone == 0)) || ((countDown_sm < sZone) && (countDown_sm == aZone))) {
                    timerID = setTimeout("AskTimeOut()", 3000);
                }

                if(countDown_sm <= cacheTime) {
                    printTime('----- SSO即將逾時 -----');
                    $('#SSOMessage').text('SSO即將逾時，延時請');
                    $('#SSOLogout').text('，登出請按');
                    $('#SSOLogout2').text('');

                    if(countDown_sm == cacheTime)
                        gotFocus = 1;

                    if(gotFocus > 0) {
                            try {
                                printTime('countDown - [top] countDown_sm <= cacheTime && gotFocus > 0(SSO3 更新 登出{561}) {document.title='+document.title+'} ');
                                KSSOIE1.SetWinTop(true, document.title);
                                printTime('countDown - [end] countDown_sm <= cacheTime && gotFocus > 0(SSO3 更新 登出{561}) {document.title='+document.title+'} ');
                            } catch(err) {
                                if(window.console) {
                                    console.log('!!!! {error1='+err+'} !!!!}');
                                }
                            }
                        gotFocus-=1;
                    }
                }

                if(countDown_sm != idleMax && countDown_sm%60 == 0) {
                    sessionCounter+=1;
                }

                var thisMin = Math.floor(countDown_sm/60);
                var thisSec = Math.floor((countDown_sm%60));

                if(countDown_sm > cacheTime) {
                    $('#SSOMessage').text("SSO大約於"+thisMin+"分"+thisSec+"秒後逾時。延時請按");
                    $('#SSOLogout').text('，登出請按');
                    $('#SSOLogout2').text('');
                }
            }
            else {
                flag = 1;
                setForm("refreshform", "askTime", "-1");
                setForm("askform", "askTime", "-1");
                sendForm("askform");
            }
        }
        catch(err) {
            flag = 1;
            clearInterval(countDownSSOID);
        }
    }

    function AskIfSessionOK() {
        setForm("askform", "askTime", countDown_sm);
        sendForm("askform");
    }

    function AskTimeOut() {
        setForm("refreshform", "askTime", (countDown_sm-1));
        setForm("askform", "askTime", (countDown_sm-1));
        sendForm("askform");
    }

    function setForm(formName, fieldName, fieldValue) {
        var hiddenForm = document.forms[formName];
        if(hiddenForm != null)
            hiddenForm.elements[fieldName].value = fieldValue;
    }

    function sendForm(formName) {

        var hiddenFrm = document.forms[formName];

        if(formName=="askform") {
            hiddenFrm.askButn.click();
        }
        else{
            hiddenFrm.refreshButn.click();
        }
    }
      </script>
    </head>
    <body bgcolor="#FFFF66"  onload="miniwin()">
      <table border="0" width="100%" cellpadding=#(0) cellspacing=#(0)>
        <tr>
          <td align="right" valign="bottom">
        <font color="#000188" style="font-size:13"><B><label id="SSOMessage">SSO資訊更新中...</label></B></font>
          </td>
          <td align="center" valign="bottom">
            <form action="javascript:get(document.getElementById('refreshform'));" method="post" name="refreshform" id="refreshform">
              <input type="button" class="btn" name="refreshButn" id="refreshButn" value="更新SSO" title="可延長IE使用SSO時間，以免因SSO逾時而需重新登入。" onclick="javascript:get(this.parentNode);miniwin();">
              <input type="hidden" name="askTime" id="askTime" value="">
              <input type="hidden" name="activeRefresh" id="activeRefresh" value="act">
              <input type="hidden" name="pcIP" id="pcIP" value="10.80.10.5">
            </form>
            <form action="javascript:get(document.getElementById('askform'));" method="post" name="askform" id="askform">
                <input type="button" style="width:70px;height:20px;font-size:12;display:none" name="askButn" id="askButn" value="詢問SSO" onclick="javascript:get(this.parentNode);miniwin();">
                <input type="hidden" name="askTime" id="askTime" value="">
                <input type="hidden" name="activeRefresh" id="activeRefresh" value="notact">
                <input type="hidden" name="firCheck" id="firCheck" value="">
            </form>
            <form name="form">
              <input type="hidden" name="showcount" id="showcount" value="">
              <input type="hidden" name="showgetcount" id="showgetcount" value="">
              <input type="hidden" name="showdiffcount" id="showdiffcount" value="">
              <input type="hidden" name="showsm" id="showsm" value="">
              <input type="hidden" name="showcando" id="showcando" value="">
              <input type="hidden" name="showact" id="showact" value="">
              <input type="hidden" name="showmsg" id="showmsg" value="">
              <input type="hidden" name="showdomake" id="showdomake" value="">
              <input type="hidden" name="showcountx" id="showcountx" value="">
            </form>
          </td>
          <td align="center" valign="bottom">
            <font color="#000188" style="font-size:13"><B><label id="SSOLogout"></label></B></font>
          </td>
          <td align="center" valign="bottom">
            <input type="button" width="0%" class="btn" name="confirmButn" id="confirmButn" value="登出SSO" title="直接登出不再使用SSO，以避免他人使用你的電腦登入系統。" onclick="closeSSO()">
          </td>
          <td align="center" valign="bottom">
            <input type="button" width="0%" style="width:70px;height:20px;font-size:12;display:none" name="closeButn" id="closeButn" value="確定" title="關閉本視窗。" onclick="javascript:closeSSO();window.opener=null;window.open('','_parent','');window.close();">
          </td>
          <td align="left" valign="bottom">
            <font color="#000188" style="font-size:13"><B><label id="SSOLogout2"></label></B></font>
          </td>
        </tr>
      </table>
      <BR>
      <center> 您最近的登入資訊：<HR></center>

      <script language="JavaScript">
        
            $.get( "https://am.cht.com.tw/NIAS/UserLoginTimeInfo.jsp", function( data ) {
                var infos = $.trim(data).split('|');
                $('#loginTime').text(infos[0]);
                $('#loginSuccessIP').text(infos[1]);
                $('#loginFailTime').text(infos[2]);
                $('#loginFailIP').text(infos[3]);
            });
            var InfoMessage = "";
            InfoMessage = "<font size=3>登入成功時間：<label id='loginTime'>SSO資訊更新中...</label><BR>";
            //InfoMessage +="登入成功IP：10.80.10.5<BR>";
            InfoMessage +="登入成功IP：<label id='loginSuccessIP'>SSO資訊更新中...</label><BR>";
            InfoMessage +="登入失敗時間：<label id='loginFailTime'>SSO資訊更新中...</label><BR>";
            InfoMessage +="登入失敗IP：<label id='loginFailIP'>SSO資訊更新中...</label><BR></font>";
            document.write("<center>" + InfoMessage + "</center>");
        
      </script>
    </body>

</html>
